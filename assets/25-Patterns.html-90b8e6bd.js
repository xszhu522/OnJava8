const e=JSON.parse('{"key":"v-6a90eeb9","path":"/book/25-Patterns.html","title":"第二十五章 设计模式","lang":"zh-CN","frontmatter":{"description":"[TOC] 概念 最初，你可以将模式视为解决特定类问题的一种特别巧妙且有深刻见解的方法。这就像前辈已经从所有角度去解决问题，并提出了最通用，最灵活的解决方案。问题可能是你之前看到并解决过的问题，但你的解决方案可能没有你在模式中体现的那种完整性。 虽然它们被称为“设计模式”，但它们实际上并不与设计领域相关联。模式似乎与传统的分析、设计和实现的思维方式不同...","head":[["meta",{"property":"og:url","content":"https://xszhu522.github.io/OnJava8/book/25-Patterns.html"}],["meta",{"property":"og:site_name","content":"On Java 8"}],["meta",{"property":"og:title","content":"第二十五章 设计模式"}],["meta",{"property":"og:description","content":"[TOC] 概念 最初，你可以将模式视为解决特定类问题的一种特别巧妙且有深刻见解的方法。这就像前辈已经从所有角度去解决问题，并提出了最通用，最灵活的解决方案。问题可能是你之前看到并解决过的问题，但你的解决方案可能没有你在模式中体现的那种完整性。 虽然它们被称为“设计模式”，但它们实际上并不与设计领域相关联。模式似乎与传统的分析、设计和实现的思维方式不同..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-04T17:10:29.000Z"}],["meta",{"property":"article:author","content":"xszhu522"}],["meta",{"property":"article:modified_time","content":"2023-11-04T17:10:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第二十五章 设计模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-04T17:10:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xszhu522\\",\\"url\\":\\"https://xszhu522.github.io\\"}]}"]]},"headers":[{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[{"level":3,"title":"单例模式","slug":"单例模式","link":"#单例模式","children":[]},{"level":3,"title":"模式分类","slug":"模式分类","link":"#模式分类","children":[]}]},{"level":2,"title":"构建应用程序框架","slug":"构建应用程序框架","link":"#构建应用程序框架","children":[]},{"level":2,"title":"面向实现","slug":"面向实现","link":"#面向实现","children":[]},{"level":2,"title":"工厂模式","slug":"工厂模式","link":"#工厂模式","children":[{"level":3,"title":"动态工厂","slug":"动态工厂","link":"#动态工厂","children":[]},{"level":3,"title":"多态工厂","slug":"多态工厂","link":"#多态工厂","children":[]},{"level":3,"title":"抽象工厂","slug":"抽象工厂","link":"#抽象工厂","children":[]}]},{"level":2,"title":"函数对象","slug":"函数对象","link":"#函数对象","children":[{"level":3,"title":"命令模式","slug":"命令模式","link":"#命令模式","children":[]},{"level":3,"title":"策略模式","slug":"策略模式","link":"#策略模式","children":[]},{"level":3,"title":"责任链模式","slug":"责任链模式","link":"#责任链模式","children":[]}]},{"level":2,"title":"改变接口","slug":"改变接口","link":"#改变接口","children":[{"level":3,"title":"适配器模式（Adapter）","slug":"适配器模式-adapter","link":"#适配器模式-adapter","children":[]},{"level":3,"title":"外观模式（Façade）","slug":"外观模式-facade","link":"#外观模式-facade","children":[]}]},{"level":2,"title":"解释器：运行时的弹性","slug":"解释器-运行时的弹性","link":"#解释器-运行时的弹性","children":[]},{"level":2,"title":"回调","slug":"回调","link":"#回调","children":[]},{"level":2,"title":"多次调度","slug":"多次调度","link":"#多次调度","children":[]},{"level":2,"title":"模式重构","slug":"模式重构","link":"#模式重构","children":[]},{"level":2,"title":"抽象用法","slug":"抽象用法","link":"#抽象用法","children":[]},{"level":2,"title":"多次派遣","slug":"多次派遣","link":"#多次派遣","children":[]},{"level":2,"title":"访问者模式","slug":"访问者模式","link":"#访问者模式","children":[]},{"level":2,"title":"RTTI的优劣","slug":"rtti的优劣","link":"#rtti的优劣","children":[]},{"level":2,"title":"本章小结","slug":"本章小结","link":"#本章小结","children":[]}],"git":{"createdTime":1553949104000,"updatedTime":1699117829000,"contributors":[{"name":"X-ljy","email":"17637938901@163.com","commits":3},{"name":"Crimson_Loves_Code","email":"39024757+OrientationJump@users.noreply.github.com","commits":1},{"name":"LingCoder","email":"lingcoder@gmail.com","commits":1},{"name":"jjm","email":"1065658889@qq.com","commits":1},{"name":"john-h3","email":"369425422@qq.com","commits":1},{"name":"rainbow","email":"jarvisfironman@gmail.com","commits":1},{"name":"xszhu522","email":"919317559@qq.com","commits":1},{"name":"左元","email":"275395953@qq.com","commits":1},{"name":"左元","email":"zuoyuantc@126.com","commits":1}]},"readingTime":{"minutes":32.08,"words":9625},"filePathRelative":"book/25-Patterns.md","localizedDate":"2019年3月30日","autoDesc":true,"excerpt":""}');export{e as data};
